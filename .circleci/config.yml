version: 2
jobs:
  frontend_prepare:
    docker:
    - image: circleci/node:12.4.0
    working_directory: ~/workspace
    steps:
      - checkout
      - restore_cache:
          key: frontend-v1-dependencies-{{ checksum "frontend/yarn.lock" }}
      - run:
          name: Install dependencies
          command: yarn install
          working_directory: frontend
      - save_cache:
          key: frontend-v1-dependencies-{{ checksum "frontend/yarn.lock" }}
          paths: frontend/node_modules
      - persist_to_workspace:
          root: frontend
          paths:
            - node_modules
  frontend_lint:
    docker:
    - image: circleci/node:12.4.0
    working_directory: ~/workspace
    steps:
      - checkout
      - attach_workspace:
          at: frontend
      - run:
          name: Run ESLint
          command: yarn lint
          working_directory: frontend
  frontend_build:
    docker:
    - image: circleci/node:12.4.0
    working_directory: ~/workspace
    steps:
      - checkout
      - attach_workspace:
          at: frontend
      - run:
          name: Build
          command: yarn build
          working_directory: frontend
  api_build:
    working_directory: ~/pring-api
    docker:
      - image: circleci/ruby:2.6.4-stretch
        environment:
          MYSQL_ROOT_PASSWORD: password
      - image: mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: password
    steps:
      - checkout
      - run:
          name: Which bundler?
          command: bundle -v
      # Restore bundle cache
      - restore_cache:
          keys:
            - api-v1-dependencies-{{ checksum "api/Gemfile.lock" }}
      - run:
          name: Bundle Install
          command: bundle check || bundle install
          working_directory: api
      # Store bundle cache
      - save_cache:
          - api-v1-dependencies-{{ checksum "api/Gemfile.lock" }}
          paths:
            - api/vendor/bundle
      - run:
          name: create databse
          command: bundle exec rails db:create
          working_directory: api
      - run:
          name: migrate databse
          command: bundle exec rails db:migrate
          working_directory: api
      - run:
          name: rspec test
          command: bundle exec rspec
          working_directory: api
workflows:
  version: 2
  lint_and_build:
    jobs:
      - frontend_prepare
      - frontend_lint:
          requires:
            - frontend_prepare
      - frontend_build:
          requires:
            - frontend_lint
      - api_build
