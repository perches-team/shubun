openapi: "3.0.2"

info:
  title: "ohapo API"
  version: "0.0.1"

servers:
  - url: "http://localhost:3031/"
    description: "ローカル環境 API"

# API仕様一覧
paths:
  "/categories":
    get:
      tags:
        - categories
      summary: "ユーザが選択できるカテゴリの一覧を返す"
      parameters: []
      responses:
        "200":
          description: "Categoryモデルのリスト"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Categories"
        "400":
          $ref: "#/components/responses/UnexpectedError"

  "/whatdays":
    get:
      tags:
        - whatdays
      summary: "昨日、今日、明日の記念日を返す"
      parameters: []
      responses:
        "200":
          description: "Whatdayモデルのリスト"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Whatdays"
        "400":
          $ref: "#/components/responses/UnexpectedError"

  "/user":
    get:
      tags:
        - users
      summary: "全ユーザ情報を返す"
      parameters: []
      responses:
        "200":
          description: "ユーザモデルのリスト"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Users"
        "400":
          $ref: "#/components/responses/UnexpectedError"
        "403":
          description: "不正アクセス"
          content:
            "application/json":
              schema:
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  message: "Not Authenticated"
                  code: 403

    post:
      tags:
        - users
      summary: "ユーザ情報を作成する"
      parameters: []
      requestBody: # リクエストボディ
        description: "作成するユーザモデル"
        content:
          application/json:
            schema:
              $ref: "#/components/responses/ExampleUserWithoutId"
      responses:
        '201':
          description: "ユーザ情報作成成功"
        "400":
          $ref: "#/components/responses/UnexpectedError"

  "/user/{userId}":
    get:
      tags:
        - users
      summary: "ユーザプロフィール情報を返す"
      parameters:
        - name: userId
          in: path
          description: "ユーザID"
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: "ユーザプロフィールモデル"
          content:
            "application/json":
              schema:
                $ref: "#/components/responses/ExampleUserProfile"
        "400":
          $ref: "#/components/responses/UnexpectedError"
        "403":
          description: "不正アクセス"
          content:
            "application/json":
              schema:
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  message: "Not Authenticated"
                  code: 403
    put:
      tags:
        - users
      summary: "ユーザプロフィールを更新する"
      parameters: 
        - name: userId
          in: path
          description: "ユーザID"
          required: true
          schema:
            type: integer
      requestBody: # リクエストボディ
        description: "更新するユーザプロフィールモデル"
        content:
          application/json:
            schema:
              $ref: "#/components/responses/ExampleUserProfileWithoutUserId"
      responses:
        "200":
          description: "ユーザプロフィール更新成功"
        "400":
          $ref: "#/components/responses/UnexpectedError"
        "403":
          description: "不正アクセス"
          content:
            "application/json":
              schema:
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  message: "Not Authenticated"
                  code: 403

    delete:
      tags:
        - users
      summary: "ユーザ情報を無効にする"
      parameters:
        - name: userId
          in: path
          description: "ユーザID"
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: "ユーザ情報無効化成功"
        "400":
          $ref: "#/components/responses/UnexpectedError"
        "403":
          description: "不正アクセス"
          content:
            "application/json":
              schema:
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  message: "Not Authenticated"
                  code: 403

  "/user/{userId}/categories":
    get:
      tags:
        - users
      summary: "ユーザが選択しているカテゴリを返す"
      parameters:
        - name: userId
          in: path
          description: "ユーザID"
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: "カテゴリモデルのリスト"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Category"
        "400":
          $ref: "#/components/responses/UnexpectedError"
        "403":
          description: "不正アクセス"
          content:
            "application/json":
              schema:
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  message: "Not Authenticated"
                  code: 403

    put:
      tags:
        - users
      summary: "ユーザが選択したカテゴリを登録する"
      parameters:
        - name: userId
          in: path
          description: "ユーザID"
          required: true
          schema:
            type: integer
      requestBody: # リクエストボディ
        description: "更新するカテゴリモデルのリスト"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Categories"
      responses:
        "200":
          description: "ユーザのカテゴリ更新完了"
        "400":
          $ref: "#/components/responses/UnexpectedError"
        "403":
          description: "不正アクセス"
          content:
            "application/json":
              schema:
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  message: "Not Authenticated"
                  code: 403

  "/healthcheck":
    get:
      tags:
        - healthcheck
      summary: "正常ならOKを返す"
      responses:
        "200":
          description: "正常"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/HealthCheck"
        "400":
          $ref: "#/components/responses/UnexpectedError"

# 扱うコンポーネント一覧
components:
  schemas:
    Category:
      description: "カテゴリ"
      type: object
      required: #必須フィールド
        - id
        - category_name
      properties:
        id:
          type: integer
        category_name:
          type: string

    Categories:
      description: "カテゴリリスト"
      type: object
      required:
      properties:
        categories:
          title: "Categories"
          type: array
          items:
            $ref: "#/components/schemas/Category"

    Whatday:
      description: "記念日"
      type: object
      required:
        - date
        - description
      properties:
        date:
          type: string
          format: date
        description:
          type: string

    Whatdays:
      description: "記念日リスト"
      type: object
      required:
      properties:
        whatdays:
          title: "Whatdays"
          type: array
          items:
            $ref: "#/components/schemas/Whatday"

    User:
      description: "ユーザ"
      type: object
      required:
      properties:
        id:
          title: "User Id"
          type: integer
        user_name:
          title: "User Name"
          type: string
        enable_flag:
          title: "EnableFlag"
          type: boolean
        created_at:
          title: "Create Date"
          type: string
          format: date
        updeted_at:
          title: "Last Update Date"
          format: date
    
    Users:
      descriotion: "ユーザリスト"
      type: object
      required:
      properties:
        users:
          title: "Users"
          type: array
          items:
            $ref: "#/components/schemas/User"

    UserProfile:
      description: "ユーザプロファイル"
      type: object
      required:
      properties:
        id:
          title: "UserProfile Id"
          type: integer
        user_id:
          title: "User Id"
          type: integer
        age:
          title: "User age"
          type: integer
        gender:
          title: "User Gender"
          type: string
          minimum: 1
          maximum: 3
        location:
          title: "User Location"
          type: string
        zip_code:
          title: "User ZipCode"
          type: string
          pattern: "¥d{3}-¥d{4}"
        latitude:
          title: "User Latitude"
          type: number
          format: float
        longitude:
          title: "User Longitude"
          type: number
          format: float

    Error:
      description: "エラー"
      type: object
      required:
        - message
        - code
      properties:
        message:
          title: "Err Msg"
          type: string
        code:
          title: "Status Code"
          type: integer
          minimum: 100
          maximum: 600

    HealthCheck:
      description: "HealthCheck"
      type: object
      required:
        - result
      properties:
        result:
          title: "result"
          type: string
          example: "ok"


  # 汎用的に使うものはまとめておく
  responses:
    UnexpectedError:
      description: "予期しないエラー"
      content:
        "application/json":
          schema:
            tyope: object
            items:
              $ref: "#/components/schemas/Error"
            example:
              message: "データが見つからないとか"
              code: 400

    ExampleCategory:
      items:
        $ref: "#/components/schemas/Category"
      example:
        id: 1
        category_name: "カテゴリ1"

    ExampleUser:
      items:
        $ref: '#/components/schemas/User'
      example:
        id: 101
        user_name: John Do
        enable_flag: true
        created_at: "2019-09-21"
        updated_at: "2019-09-21"

    ExampleUserWithoutId:
      items:
        $ref: '#/components/schemas/User'
      example:
        user_name: John Do

    ExampleUserProfile:
      items:
        $ref: '#/components/schemas/UserProfile'
      example:
        id: 201
        user_id: 101
        age: 30
        gender: 1
        location: "Shinagawa, Tokyo"
        zip_code: "140-0005"
        latitude: 35.609197
        longitude: 139.730336

    ExampleUserProfileWithoutUserId:
      items:
        $ref: '#/components/schemas/UserProfile'
      example:
        id: 201
        age: 30
        gender: 1
        location: "Shinagawa, Tokyo"
        zip_code: "140-0005"


tags:
  - name: categories
    description: "カテゴリ一覧機能"
  - name: whatdays
    description: "記念日機能"
  - name: users
    description: "ユーザ操作機能"
  - name: healthcheck
    description: "HealthCheck機能"
